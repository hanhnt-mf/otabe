apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: client
      name: client
    spec:
      ports:
        - name: "8000"
          port: 8000
          targetPort: 8000
      selector:
        io.kompose.service: client
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      ports:
        - name: "49425"
          port: 49425
          targetPort: 3306
      selector:
        io.kompose.service: db
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: server
      name: server
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
      selector:
        io.kompose.service: server
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: client
      name: client
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: client
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: client
        spec:
          containers:
            - args:
                - /bin/sh
                - -c
                - go run cmd/client/otabe_client.go
              image: dockerhannamf/pbl-otabe:firstimage
              name: client
              ports:
                - containerPort: 8000
              resources: {}
              volumeMounts:
                - mountPath: /pbl-otabe
                  name: client-claim0
          restartPolicy: Always
          volumes:
            - name: client-claim0
              persistentVolumeClaim:
                claimName: client-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: client-claim0
      name: client-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: db
        spec:
          containers:
            - env:
                - name: MYSQL_DATABASE
                  value: otabe
                - name: MYSQL_PASSWORD
                  value: Hannamysql.1518
                - name: MYSQL_ROOT_PASSWORD
                  value: Hannamysql.1518
                - name: MYSQL_USER
                  value: docker
              image: mysql
              name: mysql1
              ports:
                - containerPort: 3306
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubemanifests.yaml
        kompose.version: 1.26.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: server
      name: server
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: server
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubemanifests.yaml
            kompose.version: 1.26.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: server
        spec:
          containers:
            - args:
                - /bin/sh
                - -c
                - go run cmd/server/otabe_server.go | jq .
              image: dockerhannamf/pbl-otabe:firstimage
              name: server
              ports:
                - containerPort: 8080
              resources: {}
              volumeMounts:
                - mountPath: /pbl-otabe
                  name: server-claim0
          restartPolicy: Always
          volumes:
            - name: server-claim0
              persistentVolumeClaim:
                claimName: server-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: server-claim0
      name: server-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

